{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/comm.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","value","onChange","PersonForm","onSubmit","nameValue","nameOnChange","numberValue","numberOnChange","type","Persons","namesToShow","showing","persons","filter","person","name","includes","map","key","number","onClick","remove","baseUrl","axios","get","newObject","post","id","delete","put","Notification","message","className","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","filterShown","newFilter","setNewFilter","opMessage","setOpMessage","names","useEffect","commService","then","response","data","event","target","preventDefault","personObject","oldPerson","find","newPerson","window","confirm","setTimeout","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.89ac6014.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n  return (\r\n    <form>\r\n          <div>\r\n            filter shown with <input value={props.value} onChange={props.onChange}/>\r\n          </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.onSubmit}>\r\n        <div>\r\n          name: <input value={props.nameValue} onChange={props.nameOnChange}/>\r\n        </div>\r\n        <div>\r\n          number: <input value={props.numberValue} onChange={props.numberOnChange}/>\r\n          </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Persons = (props) => {\r\n  const namesToShow = props.showing\r\n    ? props.persons\r\n    : props.persons.filter(person => person.name.includes(props.filter))\r\n\r\n  const list = () => namesToShow.map(person => \r\n    <li key={person.name}>\r\n      {person.name} {person.number} <button onClick={() => props.remove(person)}>Delete</button>\r\n    </li>\r\n  )  \r\n  \r\n  return (\r\n    <ul>\r\n      {list()}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Persons","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n  return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst remove = id => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst replace = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nexport default { getAll, create, remove, replace}","import React from 'react'\r\nimport './Notification.css'\r\n\r\nconst Notification = ({message}) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  //console.log(message)\r\n\r\n  if (message.includes('already removed')) {\r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"notification\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport commService from './services/comm'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([]) \n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filterShown] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [opMessage, setOpMessage] = useState(null)\n  const names = persons.map(person => person.name)\n  \n  useEffect(() => {\n    commService\n      .getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    if (names.includes(newName)) {\n      const oldPerson = persons.find(person => person.name.includes(newName))\n      const newPerson = { ...oldPerson, number: newNumber}\n\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        commService \n          .replace(oldPerson.id, newPerson)\n          .then(response => {\n            commService\n              .getAll()\n              .then(response => {\n                setPersons(response.data)\n                setOpMessage(\n                  `Changed number for ${newName}`\n                )\n                setTimeout(() => {\n                  setOpMessage(null)\n                }, 3000)\n            })\n            setNewName('')\n            setNewNumber('')\n          })\n      }\n    } else {\n      commService\n        .create(personObject)\n        .then(response => {\n          commService\n            .getAll()\n            .then(response => {\n              setPersons(response.data)\n          })\n          setNewName('')\n          setNewNumber('')\n          setOpMessage(\n            `Added ${newName}`\n          )\n          setTimeout(() => {\n            setOpMessage(null)\n          }, 3000)\n        })\n    }    \n  }\n\n  const removePerson = person => {\n    const id = person.id\n    if (window.confirm(`Delete ${person.name}?`)) {\n      commService\n        .remove(id)\n        .then(response => {\n          commService\n            .getAll()\n            .then(response => {\n              setPersons(response.data)\n              setOpMessage(\n                `Removed ${person.name} from phonebook`\n              )\n              setTimeout(() => {\n                setOpMessage(null)\n              }, 3000)\n          })\n        })\n        .catch (error => {\n          setOpMessage(\n            `${person.name} was already removed from phonebook`\n          )\n          setTimeout(() => {\n            setOpMessage(null)\n          }, 3000)\n        })\n      \n    }\n    \n  }\n  const handleNewName = (event) => {\n    //console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNewNumber = (event) => {\n    //console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleNewFilter = (event) => {\n    //console.log(event.target.value)\n    setNewFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={opMessage} />\n      <Filter value={newFilter} onChange={handleNewFilter}/>\n      <h2> Add a new</h2>\n      <PersonForm \n        onSubmit={addPerson}\n        nameValue={newName}\n        nameOnChange={handleNewName}\n        numberValue={newNumber}\n        numberOnChange={handleNewNumber}/>      \n      <h2>Numbers</h2>\n      <Persons showing={filterShown} filter={newFilter} persons={persons} remove={removePerson}/>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n)"],"sourceRoot":""}